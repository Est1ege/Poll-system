# Generated by Django 5.2.3 on 2025-06-22 02:26

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Question text')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('is_quiz', models.BooleanField(default=False, verbose_name='Is a quiz')),
                ('is_multi_question', models.BooleanField(default=False, verbose_name='Multiple questions poll')),
                ('vote_type', models.CharField(choices=[('single', 'Single choice'), ('multiple', 'Multiple choice'), ('rating', 'Rating vote')], default='single', max_length=10, verbose_name='Vote type')),
                ('visibility', models.CharField(choices=[('anonymous', 'Anonymous'), ('public', 'Public')], default='public', max_length=10, verbose_name='Vote visibility')),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Publication date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End date')),
                ('active', models.BooleanField(default=True, verbose_name='Active')),
                ('allow_change_vote', models.BooleanField(default=True, verbose_name='Allow vote change')),
                ('show_results_before_end', models.BooleanField(default=False, verbose_name='Show results before end')),
                ('require_justification', models.BooleanField(default=False, verbose_name='Require justification')),
                ('allow_discussion', models.BooleanField(default=False, verbose_name='Allow discussion')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('slug', models.SlugField(default=uuid.uuid4, editable=False, max_length=36, unique=True, verbose_name='URL slug')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Owner')),
            ],
            options={
                'verbose_name': 'Poll',
                'verbose_name_plural': 'Polls',
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='Discussion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.TextField(verbose_name='Message')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.poll', verbose_name='Poll')),
            ],
            options={
                'verbose_name': 'Discussion',
                'verbose_name_plural': 'Discussions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PollInvitation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, verbose_name='Email')),
                ('token', models.CharField(max_length=64, unique=True, verbose_name='Invitation token')),
                ('is_used', models.BooleanField(default=False, verbose_name='Is used')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.poll', verbose_name='Poll')),
            ],
            options={
                'verbose_name': 'Poll Invitation',
                'verbose_name_plural': 'Poll Invitations',
            },
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Question text')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('is_required', models.BooleanField(default=True, verbose_name='Required')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='polls.poll', verbose_name='Poll')),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=255, verbose_name='Choice text')),
                ('is_correct', models.BooleanField(default=False, verbose_name='Correct answer')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Order')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='choices', to='polls.question', verbose_name='Question')),
            ],
            options={
                'verbose_name': 'Choice',
                'verbose_name_plural': 'Choices',
                'ordering': ['order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Group name')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('users', models.ManyToManyField(to=settings.AUTH_USER_MODEL, verbose_name='Users')),
            ],
            options={
                'verbose_name': 'User Group',
                'verbose_name_plural': 'User Groups',
            },
        ),
        migrations.CreateModel(
            name='PollAccess',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('can_vote', models.BooleanField(default=True, verbose_name='Can vote')),
                ('can_view_results', models.BooleanField(default=True, verbose_name='Can view results')),
                ('poll', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.poll', verbose_name='Poll')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('user_group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='polls.usergroup', verbose_name='User group')),
            ],
            options={
                'verbose_name': 'Poll Access',
                'verbose_name_plural': 'Poll Accesses',
                'unique_together': {('poll', 'user'), ('poll', 'user_group')},
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('justification', models.TextField(blank=True, verbose_name='Justification')),
                ('rating', models.PositiveIntegerField(blank=True, null=True, verbose_name='Rating')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated at')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.choice', verbose_name='Choice')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.question', verbose_name='Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Vote',
                'verbose_name_plural': 'Votes',
                'unique_together': {('user', 'question')},
            },
        ),
    ]
